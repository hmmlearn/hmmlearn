name: build

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install
      shell: bash
      run: |
        python -mpip install --upgrade pip setuptools wheel pytest pytest-cov &&
        python -mpip install -ve . &&
        python -mpip list
    - name: Test
      shell: bash
      run: |
        python -mpytest --cov --cov-branch --cov-report=xml
    - uses: codecov/codecov-action@v1
    - name: Build wheels
      shell: bash
      run: |
        git clean -xdf &&
        case "$(python -c 'import sys; print(sys.platform)')" in
        linux)
          PV="$(python -c 'import sys; print("".join(map(str, sys.version_info[:2])))')" &&
          ABI="$(python -c 'import sys; print(sys.abiflags)')" &&
          docker run --interactive --volume="$(pwd)":/io:Z --workdir=/io \
            quay.io/pypa/manylinux1_x86_64 bash <<EOF
        /opt/python/cp"$PV"-cp"$PV$ABI"/bin/python setup.py bdist_wheel --verbose &&
          auditwheel --verbose repair --wheel-dir=/io/dist /io/dist/*.whl
        EOF
          ;;
        *)
          python setup.py bdist_wheel
          ;;
        esac
    - uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist/*.whl
  build_aarch64:
    name: "Build wheel on ${{ matrix.pyver }} aarch64"
    strategy:
      matrix:
        pyver: [cp36-cp36m, cp37-cp37m, cp38-cp38, cp39-cp39]
        arch: [aarch64]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      py: /opt/python/${{ matrix.pyver }}/bin/python
      img: quay.io/pypa/manylinux2014_${{ matrix.arch }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Test and wheel build
      run: |
        docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          ${{ env.img }} \
          bash -exc '${{ env.py }} -m pip install virtualenv && ${{ env.py }} -m venv .env && \
          source .env/bin/activate && \
          echo "Installing dependencies" && \
          pip install -U pip setuptools wheel pytest pytest-cov && \
          pip install -ve . && \
          pip list && \
          python -mpytest --cov --cov-branch --cov-report=xml && \
          python setup.py bdist_wheel --verbose && \
          auditwheel --verbose repair --wheel-dir=dist dist/*.whl && \
          deactivate'
    - uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist/*.whl
